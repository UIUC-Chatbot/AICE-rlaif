{
  "results": {
    "glue": {
      "mcc,none": 0.0,
      "mcc_stderr,none": 0.0,
      "f1,none": 0.5999644098728141,
      "f1_stderr,none": 0.0035936162509257346,
      "acc,none": 0.6710040495474037,
      "acc_stderr,none": 0.0017664205195886322,
      "alias": "glue"
    },
    "cola": {
      "mcc,none": 0.0,
      "mcc_stderr,none": 0.0,
      "alias": " - cola"
    },
    "mnli": {
      "acc,none": 0.5206316861946001,
      "acc_stderr,none": 0.0050428602526436045,
      "alias": " - mnli"
    },
    "mnli_mismatch": {
      "acc,none": 0.521053702196908,
      "acc_stderr,none": 0.00503832066990597,
      "alias": " - mnli_mismatch"
    },
    "mrpc": {
      "acc,none": 0.5490196078431373,
      "acc_stderr,none": 0.02466468384366344,
      "f1,none": 0.5467980295566504,
      "f1_stderr,none": 0.02988357954290765,
      "alias": " - mrpc"
    },
    "qnli": {
      "acc,none": 0.6130331319787663,
      "acc_stderr,none": 0.0065902671025108925,
      "alias": " - qnli"
    },
    "qqp": {
      "acc,none": 0.7475142221122929,
      "acc_stderr,none": 0.0021606364099073247,
      "f1,none": 0.6005009392611147,
      "f1_stderr,none": 0.003617318701053783,
      "alias": " - qqp"
    },
    "rte": {
      "acc,none": 0.7148014440433214,
      "acc_stderr,none": 0.027177645574521115,
      "alias": " - rte"
    },
    "sst2": {
      "acc,none": 0.9013761467889908,
      "acc_stderr,none": 0.01010264136545115,
      "alias": " - sst2"
    },
    "wnli": {
      "acc,none": 0.8169014084507042,
      "acc_stderr,none": 0.046225147349214284,
      "alias": " - wnli"
    }
  },
  "groups": {
    "glue": {
      "mcc,none": 0.0,
      "mcc_stderr,none": 0.0,
      "f1,none": 0.5999644098728141,
      "f1_stderr,none": 0.0035936162509257346,
      "acc,none": 0.6710040495474037,
      "acc_stderr,none": 0.0017664205195886322,
      "alias": "glue"
    }
  },
  "group_subtasks": {
    "glue": [
      "qnli",
      "cola",
      "wnli",
      "qqp",
      "rte",
      "mnli",
      "mnli_mismatch",
      "mrpc",
      "sst2"
    ]
  },
  "configs": {
    "cola": {
      "task": "cola",
      "group": "glue",
      "dataset_path": "glue",
      "dataset_name": "cola",
      "training_split": "train",
      "validation_split": "validation",
      "doc_to_text": "{{sentence}}\nQuestion: Does this sentence make sense?\nAnswer:",
      "doc_to_target": "label",
      "doc_to_choice": [
        "no",
        "yes"
      ],
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "mcc"
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "sentence",
      "metadata": {
        "version": 1.0
      }
    },
    "mnli": {
      "task": "mnli",
      "group": "glue",
      "dataset_path": "glue",
      "dataset_name": "mnli",
      "training_split": "train",
      "validation_split": "validation_matched",
      "doc_to_text": "def doc_to_text(doc) -> str:\n    return \"{}\\nQuestion: {} True, False or Neither?\\nAnswer:\".format(\n        doc[\"premise\"],\n        doc[\"hypothesis\"].strip()\n        + (\"\" if doc[\"hypothesis\"].strip().endswith(\".\") else \".\"),\n    )\n",
      "doc_to_target": "label",
      "doc_to_choice": [
        "True",
        "Neither",
        "False"
      ],
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "acc"
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 1.0
      }
    },
    "mnli_mismatch": {
      "task": "mnli_mismatch",
      "group": "glue",
      "dataset_path": "glue",
      "dataset_name": "mnli",
      "training_split": "train",
      "validation_split": "validation_mismatched",
      "doc_to_text": "def doc_to_text(doc) -> str:\n    return \"{}\\nQuestion: {} True, False or Neither?\\nAnswer:\".format(\n        doc[\"premise\"],\n        doc[\"hypothesis\"].strip()\n        + (\"\" if doc[\"hypothesis\"].strip().endswith(\".\") else \".\"),\n    )\n",
      "doc_to_target": "label",
      "doc_to_choice": [
        "True",
        "Neither",
        "False"
      ],
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "acc"
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 1.0
      }
    },
    "mrpc": {
      "task": "mrpc",
      "group": "glue",
      "dataset_path": "glue",
      "dataset_name": "mrpc",
      "training_split": "train",
      "validation_split": "validation",
      "doc_to_text": "Sentence 1: {{sentence1}}\nSentence 2: {{sentence2}}\nQuestion: Do both sentences mean the same thing?\nAnswer:",
      "doc_to_target": "label",
      "doc_to_choice": [
        "no",
        "yes"
      ],
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "acc"
        },
        {
          "metric": "f1"
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 1.0
      }
    },
    "qnli": {
      "task": "qnli",
      "group": "glue",
      "dataset_path": "glue",
      "dataset_name": "qnli",
      "training_split": "train",
      "validation_split": "validation",
      "doc_to_text": "{{question}}\n{{sentence}}\nQuestion: Does this response answer the question?\nAnswer:",
      "doc_to_target": "label",
      "doc_to_choice": [
        "yes",
        "no"
      ],
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "acc"
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 1.0
      }
    },
    "qqp": {
      "task": "qqp",
      "group": "glue",
      "dataset_path": "glue",
      "dataset_name": "qqp",
      "training_split": "train",
      "validation_split": "validation",
      "doc_to_text": "Question 1: {{question1}}\nQuestion 2: {{question2}}\nQuestion: Do both questions ask the same thing?\nAnswer:",
      "doc_to_target": "label",
      "doc_to_choice": [
        "no",
        "yes"
      ],
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "acc"
        },
        {
          "metric": "f1"
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 2.0
      }
    },
    "rte": {
      "task": "rte",
      "group": "glue",
      "dataset_path": "glue",
      "dataset_name": "rte",
      "training_split": "train",
      "validation_split": "validation",
      "doc_to_text": "{{sentence1}}\nQuestion: {{sentence2}} True or False?\nAnswer:",
      "doc_to_target": "label",
      "doc_to_choice": [
        "True",
        "False"
      ],
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "acc"
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 1.0
      }
    },
    "sst2": {
      "task": "sst2",
      "group": "glue",
      "dataset_path": "glue",
      "dataset_name": "sst2",
      "training_split": "train",
      "validation_split": "validation",
      "doc_to_text": "{{sentence}}\nQuestion: Is this sentence positive or negative?\nAnswer:",
      "doc_to_target": "label",
      "doc_to_choice": [
        "negative",
        "positive"
      ],
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "acc"
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 1.0
      }
    },
    "wnli": {
      "task": "wnli",
      "group": "glue",
      "dataset_path": "glue",
      "dataset_name": "wnli",
      "training_split": "train",
      "validation_split": "validation",
      "doc_to_text": "{{sentence1}}\nQuestion: {{sentence2}} True or False?\nAnswer:",
      "doc_to_target": "label",
      "doc_to_choice": [
        "False",
        "True"
      ],
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "acc"
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 2.0
      }
    }
  },
  "versions": {
    "cola": 1.0,
    "mnli": 1.0,
    "mnli_mismatch": 1.0,
    "mrpc": 1.0,
    "qnli": 1.0,
    "qqp": 2.0,
    "rte": 1.0,
    "sst2": 1.0,
    "wnli": 2.0
  },
  "n-shot": {
    "cola": 0,
    "glue": 0,
    "mnli": 0,
    "mnli_mismatch": 0,
    "mrpc": 0,
    "qnli": 0,
    "qqp": 0,
    "rte": 0,
    "sst2": 0,
    "wnli": 0
  },
  "n-samples": {
    "qnli": {
      "original": 5463,
      "effective": 5463
    },
    "cola": {
      "original": 1043,
      "effective": 1043
    },
    "wnli": {
      "original": 71,
      "effective": 71
    },
    "qqp": {
      "original": 40430,
      "effective": 40430
    },
    "rte": {
      "original": 277,
      "effective": 277
    },
    "mnli": {
      "original": 9815,
      "effective": 9815
    },
    "mnli_mismatch": {
      "original": 9832,
      "effective": 9832
    },
    "mrpc": {
      "original": 408,
      "effective": 408
    },
    "sst2": {
      "original": 872,
      "effective": 872
    }
  },
  "config": {
    "model": "hf",
    "model_args": "pretrained=CAII-NCSA/Llama3_70B_UIUC_ECE_SFT_Lora,parallelize=True",
    "model_num_parameters": 72862146560,
    "model_dtype": "torch.bfloat16",
    "model_revision": "main",
    "model_sha": "b6cc1f9c76804191ffe20b8b19f5c858d39d049d",
    "batch_size": "8",
    "batch_sizes": [],
    "device": null,
    "use_cache": null,
    "limit": null,
    "bootstrap_iters": 100000,
    "gen_kwargs": null,
    "random_seed": 0,
    "numpy_seed": 1234,
    "torch_seed": 1234,
    "fewshot_seed": 1234
  },
  "git_hash": "cb22e502",
  "date": 1717613692.885531,
  "pretty_env_info": "PyTorch version: 2.2.1+cu121\nIs debug build: False\nCUDA used to build PyTorch: 12.1\nROCM used to build PyTorch: N/A\n\nOS: Red Hat Enterprise Linux release 8.8 (Ootpa) (x86_64)\nGCC version: (Spack GCC) 11.3.0\nClang version: Could not collect\nCMake version: version 3.29.1\nLibc version: glibc-2.28\n\nPython version: 3.10.13 | packaged by conda-forge | (main, Oct 26 2023, 18:07:37) [GCC 12.3.0] (64-bit runtime)\nPython platform: Linux-4.18.0-477.51.1.el8_8.x86_64-x86_64-with-glibc2.28\nIs CUDA available: True\nCUDA runtime version: 11.7.64\nCUDA_MODULE_LOADING set to: LAZY\nGPU models and configuration: \nGPU 0: NVIDIA A100 80GB PCIe\nGPU 1: NVIDIA A100 80GB PCIe\n\nNvidia driver version: 550.54.15\ncuDNN version: Could not collect\nHIP runtime version: N/A\nMIOpen runtime version: N/A\nIs XNNPACK available: True\n\nCPU:\nArchitecture:        x86_64\nCPU op-mode(s):      32-bit, 64-bit\nByte Order:          Little Endian\nCPU(s):              64\nOn-line CPU(s) list: 0-63\nThread(s) per core:  1\nCore(s) per socket:  32\nSocket(s):           2\nNUMA node(s):        2\nVendor ID:           AuthenticAMD\nCPU family:          23\nModel:               49\nModel name:          AMD EPYC 7452 32-Core Processor\nStepping:            0\nCPU MHz:             2345.574\nBogoMIPS:            4691.14\nVirtualization:      AMD-V\nL1d cache:           32K\nL1i cache:           32K\nL2 cache:            512K\nL3 cache:            16384K\nNUMA node0 CPU(s):   0-31\nNUMA node1 CPU(s):   32-63\nFlags:               fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext fxsr_opt pdpe1gb rdtscp lm constant_tsc rep_good nopl nonstop_tsc cpuid extd_apicid aperfmperf pni pclmulqdq monitor ssse3 fma cx16 sse4_1 sse4_2 x2apic movbe popcnt aes xsave avx f16c rdrand lahf_lm cmp_legacy svm extapic cr8_legacy abm sse4a misalignsse 3dnowprefetch osvw ibs skinit wdt tce topoext perfctr_core perfctr_nb bpext perfctr_llc mwaitx cpb cat_l3 cdp_l3 hw_pstate ssbd mba ibrs ibpb stibp vmmcall fsgsbase bmi1 avx2 smep bmi2 cqm rdt_a rdseed adx smap clflushopt clwb sha_ni xsaveopt xsavec xgetbv1 xsaves cqm_llc cqm_occup_llc cqm_mbm_total cqm_mbm_local clzero irperf xsaveerptr wbnoinvd amd_ppin arat npt lbrv svm_lock nrip_save tsc_scale vmcb_clean flushbyasid decodeassists pausefilter pfthreshold avic v_vmsave_vmload vgif v_spec_ctrl umip rdpid overflow_recov succor smca sme sev sev_es\n\nVersions of relevant libraries:\n[pip3] mypy-extensions==1.0.0\n[pip3] numpy==1.26.4\n[pip3] onnxruntime==1.17.1\n[pip3] pytorch-ranger==0.1.1\n[pip3] torch==2.2.1\n[pip3] torchaudio==2.2.0+cu118\n[pip3] torchvision==0.17.0+cu118\n[pip3] triton==2.2.0\n[conda] blas                      2.121                       mkl    conda-forge\n[conda] blas-devel                3.9.0            21_linux64_mkl    conda-forge\n[conda] cudatoolkit               11.7.1              h4bc3d14_13    conda-forge\n[conda] ffmpeg                    4.3                  hf484d3e_0    pytorch\n[conda] libblas                   3.9.0            21_linux64_mkl    conda-forge\n[conda] libcblas                  3.9.0            21_linux64_mkl    conda-forge\n[conda] liblapack                 3.9.0            21_linux64_mkl    conda-forge\n[conda] liblapacke                3.9.0            21_linux64_mkl    conda-forge\n[conda] mkl                       2024.0.0         ha957f24_49657    conda-forge\n[conda] mkl-devel                 2024.0.0         ha770c72_49657    conda-forge\n[conda] mkl-include               2024.0.0         ha957f24_49657    conda-forge\n[conda] numpy                     1.26.4          py310hb13e2d6_0    conda-forge\n[conda] pytorch-cuda              11.7                 h778d358_5    pytorch\n[conda] pytorch-mutex             1.0                        cuda    pytorch\n[conda] pytorch-ranger            0.1.1                    pypi_0    pypi\n[conda] torch                     2.0.1                    pypi_0    pypi\n[conda] torchaudio                2.2.0+cu118              pypi_0    pypi\n[conda] torchvision               0.17.0+cu118             pypi_0    pypi\n[conda] triton                    2.2.0                    pypi_0    pypi",
  "transformers_version": "4.40.1",
  "upper_git_hash": null,
  "task_hashes": {},
  "model_source": "hf",
  "model_name": "CAII-NCSA/Llama3_70B_UIUC_ECE_SFT_Lora",
  "model_name_sanitized": "CAII-NCSA__Llama3_70B_UIUC_ECE_SFT_Lora",
  "start_time": 5590284.913078295,
  "end_time": 5594119.735951458,
  "total_evaluation_time_seconds": "3834.822873163037"
}